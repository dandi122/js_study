package com.example.demo.socketio;

import org.springframework.stereotype.Component;

import com.corundumstudio.socketio.AckRequest;
import com.corundumstudio.socketio.SocketIOClient;
import com.corundumstudio.socketio.SocketIOServer;
import com.corundumstudio.socketio.listener.DataListener;

/**
 *  클라이이ㅓㄴ트 서버간 소켓 통신을 위한 모든 작업
 *  -클라이언트가 보낸 메세지 => 이벤트 등록하여 처리
 *  -클라이언트에게 보낼 메세지 구성
 */

@Component
public class SocketIOEventHandler {
	private final SocketIOServer server;
	
	public SocketIOEventHandler(SocketIOServer server) {
		super();
		this.server = server;
		
		// server 객체를 통해서 메세지 수신, 메세지 전송
		// 1. 클라이언트가 접속하였다(연결되었다)
		server.addConnectListener( socket -> {
			// socket : 접속한 클라이언트
			System.out.println("클라이언트가 접속하였다 : " + socket.getSessionId().toString());
			// 클라이언트로 메세지 전송
			// 메세지 형태는, 문자열 통상(구조는 json 혹은 일반 형태 가능함)
			// "svr_init_msg" : 임의로 설정한 이벤트명
			socket.sendEvent("svr_init_msg", "어떤 뉴스가 궁금하신가요?"); // 일반 텍스트 형태로 전송
		});
		// 2. 클라이언트가 접속이 끝났다(연결종료되었다)
		server.addDisconnectListener(socket -> {
			// socket : 접속 해제한 클라이언트
			System.out.println("클라이언트가 접속해제 : " + socket.getSessionId().toString());
		});
		//3. 클라이언트가 보낸 커스텀 메세지 처리
		server.addEventListener("cvr-news", String.class, new DataListener<String>() {

			@Override
			public void onData(SocketIOClient client, String data, AckRequest ackSender) throws Exception {
				// TODO Auto-generated method stub
				System.out.println("수신된 메세지 : " + data);
			}
			
		});
	}
	
	
}
